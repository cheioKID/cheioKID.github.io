<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Have a nice day, cheio</title>
    <link>https://cheioKID.github.io/post/</link>
    <description>Recent content in Posts on Have a nice day, cheio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cheioKID.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Afterglow</title>
      <link>https://cheioKID.github.io/post/music/afterglow/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/music/afterglow/</guid>
      <description>I am heading for sunset
Sunset is near me
Rivulet is running sparkle
Boat on rivulet, down and then gone
Leave me here, by the whirlpool
Whirlpool is waving
With gentle smiling eyes
I can stare the eyes
Where I can stay for a drink
Drink is fine
With bubbling fishes
Am I their friends?
I may go now
They urge me to stay
I don’t know how to be pitiless</description>
    </item>
    
    <item>
      <title>Die Harzreise Ⅰ Prolog</title>
      <link>https://cheioKID.github.io/post/deutsch/die-harzreise-1/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/die-harzreise-1/</guid>
      <description>Die Harzreise von Heinrich Heine Schwarze Röcke, seidne Strümpfe,
Weiße, höfliche Manschetten,
Sanfte Reden, Embrassieren –
Ach, wenn sie nur Herzen hätten!
黑裙，丝质长筒袜，礼貌的白色袖口，温和的言语，令人害羞。啊，如果他们出于真心！
Herzen in der Brust, und Liebe,
Warme Liebe in dem Herzen –
Ach, mich tötet ihr Gesinge
Von erlognen Liebesschmerzen.
胸腔内的心，和爱，心中温暖的爱。啊，她的歌声杀死了难以捉摸的爱之痛中的我。
Auf die Berge will ich steigen,
Wo die frommen Hütten stehen,
Wo die Brust sich frei erschließet
Und die freien Lüfte wehen.
我想爬上那座山，那里有可望而不可及的简陋木屋，那里我将顺畅地呼吸，自由的风吹拂着。
Auf die Berge will ich steigen,</description>
    </item>
    
    <item>
      <title>Rename dir &amp; Gen label</title>
      <link>https://cheioKID.github.io/post/note/rename-dir-gen-label/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/rename-dir-gen-label/</guid>
      <description>Rename dir 把train目录下的所有存储样本的文件夹命名为0,1,2,3…的形式，然后把实际类别名存储在target_names.txt中
#coding=utf-8 import os,sys def rename_dir(txt_file = &amp;quot;target_names.txt&amp;quot;, prefix = &#39;&#39;): path=&#39;.&#39; dir_path = path + &#39;/&#39; + txt_file[:-4] out = [] i = 0 for dirpath,dirnames,filenames in os.walk(path): if(len(dirnames)) &amp;gt;= 10: for name in dirnames: os.rename(dirpath+&#39;/&#39;+name,dirpath+&#39;/&#39;+str(i)) i += 1 out += &amp;quot;&#39;&amp;quot; + name + &amp;quot;&#39;,&amp;quot; with open(txt_file, &#39;w&#39;) as target: target.writelines(out) print(&amp;quot;----------------\n&amp;quot; &amp;quot;write(overwrite) done&amp;quot;) txt_file = &amp;quot;test.txt&amp;quot; rename_dir() # if use prefix, the &#39;/&#39; is need  Gen labels 遍历目录下按类别存储的所有样本，得到样本和对应的类别，其中类别从0开始编号，结果存在train.</description>
    </item>
    
    <item>
      <title>PCA Trail</title>
      <link>https://cheioKID.github.io/post/machine-learning/pca-trail/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/machine-learning/pca-trail/</guid>
      <description>Note Prelude 方差~离散程度~可区分度
不同投影的损失
successive orthogonal components 连续正交分量，在fit方法中学习n个分量
奇异值分解SVD
PCA假定以原点为中心，所以数据需要先中心化(standard scale)
from sklearn.preprocessing import StandardScaler X=StandardScaler().fit(X).transform(X) # 一般中心化标准化后pca才能体现出效果  Conclusion 经过分析速度得到成倍的提升
PCA 的效果会比 LDA 好一些，还没弄清楚原因
Error Detail ValueError: n_components=25 must be between 1 and min(n_samples, n_features)=24 with svd_solver=&#39;randomized&#39;  n_components只能取shape的较小值，是因为SVD吗，现在还不清楚
这种情况下只能提升样本量
Source Code # -*- coding:utf-8 -*- from sklearn.svm import SVC from skimage import img_as_ubyte from sklearn.utils import Bunch import numpy as np from PIL import Image import matplotlib.pyplot as plt from sklearn.</description>
    </item>
    
    <item>
      <title>Deutsch Ubungen</title>
      <link>https://cheioKID.github.io/post/deutsch/deutsch-ubungen/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/deutsch-ubungen/</guid>
      <description>Deutsch Ubungen 2019 Note Note 1.24 购物 KAUFHAUS WALDHEIM
 | 4. Stock: | Gartenbedarf花园用品 | Gartenmöbel | Sonnenschirme | SB-Restaurant | Abholung bestellter Waren订购商品 | Kundenservice | Reisebüro旅行社 | Fundbüro失物招领 | Garderobe衣帽间 | Toiletten | Wickelraum更衣室 | Erste Hilfe急救 | 3. Stock: | Computer | Technik | Software | Foto | Optik光学 | CDs | DVDs | Blu-Rays | Radio | TV-HIFI | Autozubehör汽车配件 | Fahrräder自行车 | Sportartikel体育用品 | Strandmode沙滩服装 | 2.</description>
    </item>
    
    <item>
      <title>Know Face Recognition Sample</title>
      <link>https://cheioKID.github.io/post/machine-learning/know-face-recognition-sample/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/machine-learning/know-face-recognition-sample/</guid>
      <description>Interpretation  dataset.images : numpy array of shape (13233, 62, 47) Each row is a face image corresponding to one of the 5749 people in the dataset. Changing the slice_ or resize parameters will change the shape of the output.
 n_samples, h, w = lfw_people.images.shape # no. of samples, height of image and width of image   dataset.data : numpy array of shape (13233, 2914) Each row corresponds to a ravelled face image of original size 62 x 47 pixels.</description>
    </item>
    
    <item>
      <title>Detect Network Connection (Dull Way)</title>
      <link>https://cheioKID.github.io/post/note/detect-network-connection/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/detect-network-connection/</guid>
      <description>今天搞错了，盲目的查了好久怎么写，又测试了老半天，结果不是让我写的
我写的时候就一直奇怪为什么要让我写这么难的东西，根本不好实现，弄的我午饭都没好好吃
因为要删掉了，所以记下来纪念我空耗的两小时
Constant.java
public static boolean isConnectedToNetwork(){ try { int timeout = 2000; InetAddress[] addresses = InetAddress.getAllByName(&amp;quot;www.baidu.com&amp;quot;); for (InetAddress address : addresses) { if (address.isReachable(timeout)) { return true; } } } catch (UnknownHostException e) { return false; } catch (IOException e) { e.printStackTrace(); } return true; }  CaseTreeView.java
exec2.scheduleWithFixedDelay(new Runnable(){ public void run() { if (null != reqParameter.getStrategy() &amp;amp;&amp;amp; !((LongSimplexLinkServerStrategyImpl) reqParameter.getStrategy()).isClientConnected()) { isNetworkAvailable = false; System.out.println(&amp;quot;......................连接已断开&amp;quot;); } if (!</description>
    </item>
    
    <item>
      <title>Know LSTM</title>
      <link>https://cheioKID.github.io/post/machine-learning/to-know-lstm/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/machine-learning/to-know-lstm/</guid>
      <description>生成句子CNN
预测单词LSTM
背景知识 RNN 循环神经网络的隐藏层中，输出不仅取决于当前的输入还取决于上一时间隐藏层的输出结果。
可以看到RNN包含历史信息（A recurrent neural network can be thought of as multiple copies of the same network, each passing a message to a successor.）

RNN可以将历史信息关联到当前的任务中，比如根据视频的历史帧赋予对当前帧的理解（One of the appeals of RNNs is the idea that they might be able to connect previous information to the present task, such as using previous video frames might inform the understanding of the present frame.）

如果相关信息和所需位置的差距很小，RNN就可以学习使用过去的信息（In such cases, where the gap between the relevant information and the place that it’s needed is small, RNNs can learn to use the past information.</description>
    </item>
    
    <item>
      <title>Install OpenCV and Compile cpp file for MAC</title>
      <link>https://cheioKID.github.io/post/opencv/install-opencv-and-compile-cpp/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/opencv/install-opencv-and-compile-cpp/</guid>
      <description>Install OpenCV and Compile cpp file for Mac 安装OpenCV2 brew install opencv@2 echo &#39;export PATH=&amp;quot;/usr/local/opt/opencv@2/bin:$PATH&amp;quot;&#39; &amp;gt;&amp;gt; ~/.zshrc export LDFLAGS=&amp;quot;-L/usr/local/opt/opencv@2/lib&amp;quot; export CPPFLAGS=&amp;quot;-I/usr/local/opt/opencv@2/include&amp;quot; export PKG_CONFIG_PATH=&amp;quot;/usr/local/opt/opencv@2/lib/pkgconfig&amp;quot; # 不知道这些环境变量是不是必要的，但还是按照提示执行了  编译C++程序 安装cmake
brew install cmake  demo程序
#include &amp;quot;opencv/cv.h&amp;quot; #include &amp;quot;opencv/highgui.h&amp;quot; using namespace cv; int main(int, char**) { VideoCapture cap(0); if(!cap.isOpened()) return -1; Mat frame, edges; namedWindow(&amp;quot;edges&amp;quot;,1); for(;;) { cap &amp;gt;&amp;gt; frame; cvtColor(frame, edges, CV_BGR2GRAY); GaussianBlur(edges, edges, Size(7,7), 1.5, 1.5); Canny(edges, edges, 0, 30, 3); imshow(&amp;quot;edges&amp;quot;, edges); if(waitKey(30) &amp;gt;= 0) break; } return 0; }  CMakeLists.</description>
    </item>
    
    <item>
      <title>Symphony-No.9</title>
      <link>https://cheioKID.github.io/post/music/symphony-no.9/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/music/symphony-no.9/</guid>
      <description>Edition 1 Froh, froh, wie seine Sonnen, seine Sonnen fliegen,
froh wie, seine, Sonnen, fliegen,
durch des Himmels prächt&amp;rsquo;gen Plan,
laufet, Brüder, eure Bahn,
laufet, Brüder, eure Bahn,
Freudig, wie ein Held zum Siegen,
wie ein Held zum Siegen,
laufet, Brüder, eure Bahn,
wie ein Held zum Siegen.
(合唱)
Freude, schöner Götterfunken
Tochter aus Elysium,
Wir betreten feuertrunken,
Himmlische, dein Heiligtum!
Deine Zauber binden wieder
Was die Mode streng geteilt;</description>
    </item>
    
    <item>
      <title>DBSCAN note</title>
      <link>https://cheioKID.github.io/post/data-mining/dbscan/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/data-mining/dbscan/</guid>
      <description>A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise  Clustering algorithms are attractive for the task of class identification in spatial databases. However, the application to large spatial databases rises the following requirements for clustering algorithms: minimal requirements of domain knowledge to determine the input parameters, discovery of clusters with arbitrary shape and good efficiency on large databases. The well-known clustering algorithms offer no solution to the combination of these requirements.</description>
    </item>
    
    <item>
      <title>匹配非ASC字符</title>
      <link>https://cheioKID.github.io/post/note/non-asc-character/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/non-asc-character/</guid>
      <description>复制的代码里面有非ASC II的字符，百度了一下，可以通过匹配正则表达式[^\x00-\x7f]来查找替换
[^\x00-\x7f]  </description>
    </item>
    
    <item>
      <title>Java moveFile IOException Solution</title>
      <link>https://cheioKID.github.io/post/note/java-io-delete-win/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/java-io-delete-win/</guid>
      <description>在Mac上无误的程序
try { FileUtils.moveFile(file, target);//用renameTo方法也可以，但是win里都没有抛出异常，才改用FileUtils.moveFile isRenamed = true; } catch (Exception e) { Log.error(e.toString()); e.printStackTrace(); return false; }  到win上抛出异常，不能重命名文件
java.io.IOException: Failed to delete original file &#39;C:\***\******\************.txt&#39; after copy to &#39;C:\***\******\************.txt.114110&#39; at org.apache.commons.io.FileUtils.moveFile(FileUtils.java:3011) at com.example.sms.LocalUtil.renameFile(LocalUtil.java:125) at com.example.sms.SendSMS.main(SendSMS.java:152)  但是发现如果没有从FTP上下载，重命名是没有问题的
看了一下FileUtil.moveFile()的源码
public static void moveFile(final File srcFile, final File destFile) throws IOException { if (srcFile == null) { throw new NullPointerException(&amp;quot;Source must not be null&amp;quot;); } if (destFile == null) { throw new NullPointerException(&amp;quot;Destination must not be null&amp;quot;); } if (!</description>
    </item>
    
    <item>
      <title>Java FTP timeout Solution</title>
      <link>https://cheioKID.github.io/post/note/java-ftp/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/java-ftp/</guid>
      <description>因为API响应太久，FTP连接已经断开，会抛出异常
org.apache.commons.net.ftp.FTPConnectionClosedException: FTP response 421 received. Server closed connection. 2018-09-11 11:38:09,082 [main] ERROR com.example.sms.FtpUtil - fetch 1st waiting file error at org.apache.commons.net.ftp.FTP.__getReply(FTP.java:388) at org.apache.commons.net.ftp.FTP.__getReply(FTP.java:300) at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:523) at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648) at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622) at org.apache.commons.net.ftp.FTP.pasv(FTP.java:1045) at org.apache.commons.net.ftp.FTPClient._openDataConnection_(FTPClient.java:895) at org.apache.commons.net.ftp.FTPClient._openDataConnection_(FTPClient.java:785) at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3409) at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3339) at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3016) at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3069) at com.example.sms.test.main(test.java:126) org.apache.commons.net.ftp.FTPConnectionClosedException: FTP response 421 received. Server closed connection. at org.apache.commons.net.ftp.FTP.__getReply(FTP.java:388) at org.apache.commons.net.ftp.FTP.__getReply(FTP.java:300) at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:523) at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648) at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622) at org.apache.commons.net.ftp.FTP.pasv(FTP.java:1045) at org.apache.commons.net.ftp.FTPClient._openDataConnection_(FTPClient.java:895) at org.apache.commons.net.ftp.FTPClient._openDataConnection_(FTPClient.java:785) at org.</description>
    </item>
    
    <item>
      <title>Cross Compile for Arm</title>
      <link>https://cheioKID.github.io/post/cs/cross-compile/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/cs/cross-compile/</guid>
      <description>安装交叉编译 克隆编译器 git clone https://github.com/xupsh/CodeSourcery.git   Sourcery CodeBench contains the complete GNUToolchain including all of the following components:
 CodeSourcery Debug Sprite for ARM
GNU Binary Utilities (Binutils) GNU C Compiler (GCC)
 GNU C Library (GLIBC) GNU C++ Compiler (G++)
GNU C++ Runtime Library (Libstdc++) GNU Debug Server (GDBServer)
 GNU Debugger (GDB)Visit: http://www.codesourcery.comto access the Sourcery CodeBench support website.   设置环境变量 export CROSS_COMPILE=arm-xilinx-linux-gnueabi- export PATH=/home/cheio/CrossCompile/CodeSourcery/bin:$PATH  可能出现的错误： .</description>
    </item>
    
    <item>
      <title>Install more than one Kernel for Ubuntu Linux</title>
      <link>https://cheioKID.github.io/post/cs/ubuntu-kernel/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/cs/ubuntu-kernel/</guid>
      <description>Ubuntu 内核
修改源
sudo cp /etc/apt/sources.list /etc/apt/sources.list_bak sudo vim /etc/apt/sources.list deb http://security.ubuntu.com/ubuntu trusty-security main sudo apt-get update  安装内核3.16
sudo apt-get install linux-image-extra-3.16.0-43-generic  查看内核是否安装
dpkg -l | grep 3.16.0-43-generic  修改grub
sudo gedit /etc/default/grub  将GRUB_DEFAULT=0替换为
GRUB_DEFAULT=&amp;quot;1&amp;gt;3&amp;quot; #一级菜单选项1下的第4个选项 #默认选择  注释这一行
#GRUB_HIDDEN_TIMEOUT=0 #注释这一行  更新grub
sudo update-grub sudo reboot  </description>
    </item>
    
    <item>
      <title>LL(1) Grammer</title>
      <link>https://cheioKID.github.io/post/cs/ll1/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/cs/ll1/</guid>
      <description>LL(1)分析表的构造  LL(1)文法没有公共左因子，也不含左递归，并且不是二义的。根据文法可以得到FIRST和FOLLOW集合，如果文法的任意两个产生式A→𝛼|𝛽，FIRST(𝛼) 和FIRST(𝛽)交集为空，即没有公共左因子，若𝛽经过若干步推导为𝜀，那么FIRST(𝛼) 和FOLLOW(A)交集为空，那么𝛽→𝜀的情况就是具体的，也不存在任何冲突。这样的文法就属于LL(1)文法。
 根据FIRST和FOLLOW集合可以的到LL(1)分析表，分析表的行对应非终结符，列对应终结符，将每个产生式根据产生式左部的非终结符和产生式右部的FIRST集合填入分析表，如果是推出𝜀的情况，需要根据产生式右部的FOLLOW集合来确定，如果某个非终结符属于产生式右部的FOLLOW集合，那么将该产生式填入分析表。
 采用LL(1)文法预测分析过程中没有左递归导致的无限循环，也没有公共左因子导致的回溯现象，根据预测分析表，每一步的推到都是确定的。
  预测分析过程  预测分析器中，符号栈初始状态下只有一个开始符号，开始符号根据输入栈栈顶的字符进行推导。 如果符号栈栈顶为非终结符，根据该非终结符和面临的输入栈栈顶的终结符可以得到产生式动作，将符号栈栈顶的产生式左部推导为产生式右部。推导的过程中，产生式左部的字符即符号栈栈顶的字符出栈后，产生式右部压栈。因为预测分析采用最左推导，所以采用反序压栈，使最左边的非终结符在出现在栈顶，优先被推导。如果该非终结符和面临的输入栈栈顶的终结符在LL(1)分析表中没有对应的产生式动作，则出错。 如果符号栈栈顶为终结符，判断是否和面临的输出栈栈顶的终结符匹配，如果匹配，两个栈的栈顶元素都出栈，继续分析下一个栈顶符号。如果不匹配则出错情况。 循环到符号栈和输入栈都为空，则预测分析完毕。  紧急错误恢复  紧急错误恢复是一种简单的错误恢复方法，发现错误时弹出输入记号，直到输入记号属于同步记号集为止。
 如果终结符在栈顶但是不匹配，最简单的方法就是弹出这个终结符，然后继续分析栈顶记号。
 非终结符的FOLLOW集合中的终结符可以作为该非终结符的同步记号，这样可以保证错误恢复后的文法属于LL(1)文法。在实验中采用了这种做法，当得到sync时，弹出栈顶的非终结符，恢复分析
  #include&amp;lt;string.h&amp;gt; #include&amp;lt;stdio.h&amp;gt; int ll1[5][6]={{1,0,0,1,99,99}, {0,2,0,0,3,3}, {4,99,0,4,99,99}, {0,6,5,0,6,6}, {8,99,0,7,99,99}}; int main() { char stack[10] = {&#39;$&#39;,&#39;E&#39;}; char input[10]; char str[10]; char ch;//当前看到的字符 int i,j,m,n; int l = 1;//栈的大小 int k = 0;//当前看到的字符的指针 int action; int step = 1; int length = 0; printf(&amp;quot;请输入，输入$结束:&amp;quot;); do { scanf(&amp;quot;%c&amp;quot;,&amp;amp;ch); if(ch == &#39;\n&#39;) continue; input[length]=ch; str[length]=ch; length++; } while(ch !</description>
    </item>
    
    <item>
      <title>Deutsch Grammer</title>
      <link>https://cheioKID.github.io/post/deutsch/deutsch-grammer/</link>
      <pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/deutsch-grammer/</guid>
      <description>换音与变音 元音只在第二人称及第三人称单数时发生变化。 并非所有带e和a的动词在变位时都会发生元音变化：
元音无变化 ich gehe - du gehst, ich lache - du lachst …  换音动词e-i    e i     emptehlen er empfiehlt   essen er sst   geben er gibt   fernsehen er sieht fern   helfen er hilft   lesen er liest   mitnehmen er nimmt mit   nehmen er nimmt   sehen er sieht   sprechen er spricht   vergessen er vergisst   werden er wird        变音动词a-a    a a     abfahren er fahrt ab   anfangen er fangt an   einladen er ladt ein   einschlafen er schlaft ein   fahren er fahrt   gefallen es gefallt   laufen er lauft   schlafen er schlaft   tragen er tragt   waschen er wascht        müssen, können, dürfen 和wollen 在进行单数人称的变位时元音会发生变化。第一人称单数和第三人称单数的现在时变位同形，无词尾。</description>
    </item>
    
    <item>
      <title>Compare Appetite</title>
      <link>https://cheioKID.github.io/post/algorithm/compare-appetite/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/algorithm/compare-appetite/</guid>
      <description>Compare Appetite 比饭量  描述  3个人比饭量，每人说了两句话： A说：B比我吃的多，C和我吃的一样多 B说：A比我吃的多，A也比C吃的多 C说：我比B吃得多，B比A吃的多。 事实上，饭量和正确断言的个数是反序的关系。 请编程按饭量的大小输出3个人的顺序。
 输入  无输入
 输出  按照饭量大小输出3人顺序，比如： ABC
 样例输入  无  样例输出
无  #include &amp;lt;iostream&amp;gt; using namespace std; int main() { int a,b,c,A,B,C; char arr[] = &amp;quot;ABC&amp;quot;; for (a=0; a&amp;lt;=2; a++) { for (b=0; b&amp;lt;=2; b++) { for (c=0; c&amp;lt;=2; c++) { A=((b&amp;gt;a)+(c==a)); B=((a&amp;gt;b)+(a&amp;gt;c)); C=((c&amp;gt;b)+(b&amp;gt;a)); if(a==0 &amp;amp;&amp;amp; A!=2) break; if(a==1 &amp;amp;&amp;amp; A!=1) break; if(a==2 &amp;amp;&amp;amp; A!</description>
    </item>
    
    <item>
      <title>Cycling competition</title>
      <link>https://cheioKID.github.io/post/algorithm/cycling-competition/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/algorithm/cycling-competition/</guid>
      <description>Cycling competition 循环比赛  描述  设有N个选手的循环比赛。其中N=2^M(2的M次方)，要求每名选手要与其他N-1名选手都赛一次，每名选手每天比赛一次，循环赛共进行N-1天，要求每天没有选手轮空。
 输入  M
 输出  表格形式的比赛安排表
 样例输入   3   样例输出   1 2 3 4 5 6 7 8 2 1 4 3 6 5 8 7 3 4 1 2 7 8 5 6 4 3 2 1 8 7 6 5 5 6 7 8 1 2 3 4 6 5 8 7 2 1 4 3 7 8 5 6 3 4 1 2 8 7 6 5 4 3 2 1  ​</description>
    </item>
    
    <item>
      <title>Deploy Hugo on github.io</title>
      <link>https://cheioKID.github.io/post/note/deploy-hugo/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/deploy-hugo/</guid>
      <description>Finally it works!
 Here&amp;rsquo;s the steps generate new blogs hugo new site blogs cd blogs git init git remote add origin git@github.com:cheioKID/Blogs.git  change the baseURL to github.io baseurl = &amp;quot;https://cheioKID.github.io/&amp;quot;  apple the theme git submodule add -b master https://github.com/xianmin/hugo-theme-jane.git themes/jane cp -r themes/jane/exampleSite/content ./ cp themes/jane/exampleSite/config.toml ./  add markdown files with head like this
--- title: &amp;quot;For example&amp;quot; date: 2018-3-25 #lastmod: 2017-08-31T15:43:48+08:00 draft: false tags: [&amp;quot;preview&amp;quot;, &amp;quot;English&amp;quot;, &amp;quot;tag-2&amp;quot;] categories: [&amp;quot;English&amp;quot;, &amp;quot;index&amp;quot;] author: &amp;quot;cheio&amp;quot; ---  or</description>
    </item>
    
    <item>
      <title>Git note</title>
      <link>https://cheioKID.github.io/post/note/git-note/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/git-note/</guid>
      <description>git笔记  版本控制系统Git，代码托管采用Github仓库  初始化  在目录下通过git init 初始化空仓库Initialized empty Git repository  暂存区  通过git add指令将修改添加到暂存区
 通过git status查看状态是否commit
 通过git rm &amp;lt;filename&amp;gt;删除版本库中的文件，实现和工作区的同步
 通过git commit提交修改，git commit -m “commit name&amp;quot; 为本次commit命名
  git add. # add changed files git rm --cached &amp;lt;file&amp;gt; # delete from git git checkout &amp;lt;file&amp;gt; # get back the file git status git commit -m &#39;Initial commit&#39;  版本  通过git log查看版本控制记录，即commit历史记录
 git log &amp;ndash;pretty=oneline breif info`</description>
    </item>
    
    <item>
      <title>LeetCode mySql</title>
      <link>https://cheioKID.github.io/post/cs/leetcode-sql/</link>
      <pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/cs/leetcode-sql/</guid>
      <description>175 SELECT FirstName, LAStName, City, State FROM person LEFT JOIN address ON person.personID = address.personID;   左外连接，除去address中person没有的元祖
 176 SELECT max(Salary) AS SecondHighestSalary FROM Employee WHERE salary NOT IN (SELECT max(Salary) FROMEmployee);   子查询得到最大值，外层查询的最大值满足小于子查询的最大值
 177 CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN(SELECT DISTINCT c.salary FROM(SELECT a.salary AS salary, (SELECT COUNT(DISTINCT b.salary) FROM employee AS bWHERE b.salary &amp;gt;= a.salary) AS _row FROM employee AS a) AS c WHEREc.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cheioKID.github.io/post/deutsch/die-harzreise-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/die-harzreise-2/</guid>
      <description>Schwarze Röcke, seidne Strümpfe,
Weiße, höfliche Manschetten,
Sanfte Reden, Embrassieren –
Ach, wenn sie nur Herzen hätten!
黑裙，丝质长筒袜，礼貌的白色袖口，温和的言语，令人害羞。啊，如果他们出于真心！
Herzen in der Brust, und Liebe,
Warme Liebe in dem Herzen –
Ach, mich tötet ihr Gesinge
Von erlognen Liebesschmerzen.
胸腔内的心，和爱，心中温暖的爱。啊，她的歌声杀死了难以捉摸的爱之痛中的我。
Auf die Berge will ich steigen,
Wo die frommen Hütten stehen,
Wo die Brust sich frei erschließet
Und die freien Lüfte wehen.
我想爬上那座山，那里有可望而不可及的简陋木屋，那里我将顺畅地呼吸，自由的风吹拂着。
Auf die Berge will ich steigen,
Wo die dunklen Tannen ragen,</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cheioKID.github.io/post/deutsch/die-harzreise-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/die-harzreise-3/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://cheioKID.github.io/post/deutsch/die-harzreise-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/die-harzreise-4/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://cheioKID.github.io/post/deutsch/die-harzreise-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/die-harzreise-5/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://cheioKID.github.io/post/deutsch/die-harzreise-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/die-harzreise-6/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://cheioKID.github.io/post/deutsch/die-harzreise-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/deutsch/die-harzreise-7/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
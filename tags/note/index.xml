<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Note on Have a nice day, cheio</title>
    <link>https://cheioKID.github.io/tags/note/</link>
    <description>Recent content in Note on Have a nice day, cheio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 05 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cheioKID.github.io/tags/note/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rename dir &amp; Gen label</title>
      <link>https://cheioKID.github.io/post/note/rename-dir-gen-label/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/rename-dir-gen-label/</guid>
      <description>Rename dir 把train目录下的所有存储样本的文件夹命名为0,1,2,3…的形式，然后把实际类别名存储在target_names.txt中
#coding=utf-8 import os,sys def rename_dir(txt_file = &amp;quot;target_names.txt&amp;quot;, prefix = &#39;&#39;): path=&#39;.&#39; dir_path = path + &#39;/&#39; + txt_file[:-4] out = [] i = 0 for dirpath,dirnames,filenames in os.walk(path): if(len(dirnames)) &amp;gt;= 10: for name in dirnames: os.rename(dirpath+&#39;/&#39;+name,dirpath+&#39;/&#39;+str(i)) i += 1 out += &amp;quot;&#39;&amp;quot; + name + &amp;quot;&#39;,&amp;quot; with open(txt_file, &#39;w&#39;) as target: target.writelines(out) print(&amp;quot;----------------\n&amp;quot; &amp;quot;write(overwrite) done&amp;quot;) txt_file = &amp;quot;test.txt&amp;quot; rename_dir() # if use prefix, the &#39;/&#39; is need  Gen labels 遍历目录下按类别存储的所有样本，得到样本和对应的类别，其中类别从0开始编号，结果存在train.</description>
    </item>
    
    <item>
      <title>Detect Network Connection (Dull Way)</title>
      <link>https://cheioKID.github.io/post/note/detect-network-connection/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/detect-network-connection/</guid>
      <description>今天搞错了，盲目的查了好久怎么写，又测试了老半天，结果不是让我写的
我写的时候就一直奇怪为什么要让我写这么难的东西，根本不好实现，弄的我午饭都没好好吃
因为要删掉了，所以记下来纪念我空耗的两小时
Constant.java
public static boolean isConnectedToNetwork(){ try { int timeout = 2000; InetAddress[] addresses = InetAddress.getAllByName(&amp;quot;www.baidu.com&amp;quot;); for (InetAddress address : addresses) { if (address.isReachable(timeout)) { return true; } } } catch (UnknownHostException e) { return false; } catch (IOException e) { e.printStackTrace(); } return true; }  CaseTreeView.java
exec2.scheduleWithFixedDelay(new Runnable(){ public void run() { if (null != reqParameter.getStrategy() &amp;amp;&amp;amp; !((LongSimplexLinkServerStrategyImpl) reqParameter.getStrategy()).isClientConnected()) { isNetworkAvailable = false; System.out.println(&amp;quot;......................连接已断开&amp;quot;); } if (!</description>
    </item>
    
    <item>
      <title>Know LSTM</title>
      <link>https://cheioKID.github.io/post/machine-learning/to-know-lstm/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/machine-learning/to-know-lstm/</guid>
      <description>生成句子CNN
预测单词LSTM
背景知识 RNN 循环神经网络的隐藏层中，输出不仅取决于当前的输入还取决于上一时间隐藏层的输出结果。
可以看到RNN包含历史信息（A recurrent neural network can be thought of as multiple copies of the same network, each passing a message to a successor.）

RNN可以将历史信息关联到当前的任务中，比如根据视频的历史帧赋予对当前帧的理解（One of the appeals of RNNs is the idea that they might be able to connect previous information to the present task, such as using previous video frames might inform the understanding of the present frame.）

如果相关信息和所需位置的差距很小，RNN就可以学习使用过去的信息（In such cases, where the gap between the relevant information and the place that it’s needed is small, RNNs can learn to use the past information.</description>
    </item>
    
    <item>
      <title>匹配非ASC字符</title>
      <link>https://cheioKID.github.io/post/note/non-asc-character/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/non-asc-character/</guid>
      <description>复制的代码里面有非ASC II的字符，百度了一下，可以通过匹配正则表达式[^\x00-\x7f]来查找替换
[^\x00-\x7f]  </description>
    </item>
    
    <item>
      <title>Deploy Hugo on github.io</title>
      <link>https://cheioKID.github.io/post/note/deploy-hugo/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/note/deploy-hugo/</guid>
      <description>Finally it works!
 Here&amp;rsquo;s the steps generate new blogs hugo new site blogs cd blogs git init git remote add origin git@github.com:cheioKID/Blogs.git  change the baseURL to github.io baseurl = &amp;quot;https://cheioKID.github.io/&amp;quot;  apple the theme git submodule add -b master https://github.com/xianmin/hugo-theme-jane.git themes/jane cp -r themes/jane/exampleSite/content ./ cp themes/jane/exampleSite/config.toml ./  add markdown files with head like this
--- title: &amp;quot;For example&amp;quot; date: 2018-3-25 #lastmod: 2017-08-31T15:43:48+08:00 draft: false tags: [&amp;quot;preview&amp;quot;, &amp;quot;English&amp;quot;, &amp;quot;tag-2&amp;quot;] categories: [&amp;quot;English&amp;quot;, &amp;quot;index&amp;quot;] author: &amp;quot;cheio&amp;quot; ---  or</description>
    </item>
    
  </channel>
</rss>
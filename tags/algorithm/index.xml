<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Have a nice day, cheio</title>
    <link>https://cheioKID.github.io/tags/algorithm/</link>
    <description>Recent content in Algorithm on Have a nice day, cheio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cheioKID.github.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compare Appetite</title>
      <link>https://cheioKID.github.io/post/algorithm/compare-appetite/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/algorithm/compare-appetite/</guid>
      <description>Compare Appetite 比饭量  描述  3个人比饭量，每人说了两句话： A说：B比我吃的多，C和我吃的一样多 B说：A比我吃的多，A也比C吃的多 C说：我比B吃得多，B比A吃的多。 事实上，饭量和正确断言的个数是反序的关系。 请编程按饭量的大小输出3个人的顺序。
 输入  无输入
 输出  按照饭量大小输出3人顺序，比如： ABC
 样例输入  无  样例输出
无  #include &amp;lt;iostream&amp;gt; using namespace std; int main() { int a,b,c,A,B,C; char arr[] = &amp;quot;ABC&amp;quot;; for (a=0; a&amp;lt;=2; a++) { for (b=0; b&amp;lt;=2; b++) { for (c=0; c&amp;lt;=2; c++) { A=((b&amp;gt;a)+(c==a)); B=((a&amp;gt;b)+(a&amp;gt;c)); C=((c&amp;gt;b)+(b&amp;gt;a)); if(a==0 &amp;amp;&amp;amp; A!=2) break; if(a==1 &amp;amp;&amp;amp; A!=1) break; if(a==2 &amp;amp;&amp;amp; A!</description>
    </item>
    
    <item>
      <title>Cycling competition</title>
      <link>https://cheioKID.github.io/post/algorithm/cycling-competition/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cheioKID.github.io/post/algorithm/cycling-competition/</guid>
      <description>Cycling competition 循环比赛  描述  设有N个选手的循环比赛。其中N=2^M(2的M次方)，要求每名选手要与其他N-1名选手都赛一次，每名选手每天比赛一次，循环赛共进行N-1天，要求每天没有选手轮空。
 输入  M
 输出  表格形式的比赛安排表
 样例输入   3   样例输出   1 2 3 4 5 6 7 8 2 1 4 3 6 5 8 7 3 4 1 2 7 8 5 6 4 3 2 1 8 7 6 5 5 6 7 8 1 2 3 4 6 5 8 7 2 1 4 3 7 8 5 6 3 4 1 2 8 7 6 5 4 3 2 1  ​</description>
    </item>
    
  </channel>
</rss>